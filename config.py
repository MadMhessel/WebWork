import os
from urllib.parse import urlparse
from pathlib import Path

from dotenv import load_dotenv
from platformdirs import user_config_dir

try:  # pragma: no cover - —Å–ø–∏—Å–æ–∫ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ —Ä–µ–≥–∏–æ–Ω–∞
    from sources_nn import SOURCES_NN, SOURCES_BY_DOMAIN, SOURCES_BY_ID
except Exception:  # pragma: no cover - —Ñ–∞–π–ª –º–æ–∂–µ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å
    SOURCES_NN: list[dict] = []
    SOURCES_BY_DOMAIN: dict[str, list[dict]] = {}
    SOURCES_BY_ID: dict[str, dict] = {}


# Load environment variables from user configuration directory and optional local .env
APP_NAME = "NewsBot"
CONFIG_DIR = Path(user_config_dir(APP_NAME))
CONFIG_DIR.mkdir(parents=True, exist_ok=True)
ENV_PATH = CONFIG_DIR / ".env"

# First load persistent config, then allow local .env to override for development
load_dotenv(ENV_PATH)
load_dotenv(Path(__file__).resolve().parent / ".env", override=True)

# Load hard-coded defaults if available
try:  # pragma: no cover - simple fallback handling
    from config_defaults import (
        BOT_TOKEN as DEFAULT_BOT_TOKEN,
        CHANNEL_ID as DEFAULT_CHANNEL_ID,
        ENABLE_MODERATION as DEFAULT_ENABLE_MODERATION,
        REVIEW_CHAT_ID as DEFAULT_REVIEW_CHAT_ID,
        MODERATOR_IDS as DEFAULT_MODERATOR_IDS,
    )
except Exception:  # pragma: no cover - executed only when defaults missing
    DEFAULT_BOT_TOKEN = ""
    DEFAULT_CHANNEL_ID = ""
    DEFAULT_ENABLE_MODERATION = False
    DEFAULT_REVIEW_CHAT_ID = ""
    DEFAULT_MODERATOR_IDS: set[int] = set()

# === –ë–∞–∑–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞ ===
# Support both legacy names and new explicit TELEGRAM_* variables
BOT_TOKEN: str = (
    os.getenv("TELEGRAM_BOT_TOKEN")
    or os.getenv("BOT_TOKEN", DEFAULT_BOT_TOKEN)
).strip()
CHANNEL_ID: str = os.getenv("CHANNEL_ID", DEFAULT_CHANNEL_ID).strip()  # –ø—Ä–∏–º–µ—Ä: "@my_news_channel" –∏–ª–∏ —á–∏—Å–ª–æ–≤–æ–π ID
RETRY_LIMIT: int = int(os.getenv("RETRY_LIMIT", "3"))

# === –ë–æ—Ç-–ø—Ä–∏—ë–º–Ω–∞—è –¥–ª—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –Ω–æ–≤–æ—Å—Ç–µ–π ===
SUGGEST_BOT_TOKEN: str = os.getenv("SUGGEST_BOT_TOKEN", "").strip()
_RAW_SUGGEST_CHAT = os.getenv("SUGGEST_MOD_CHAT_ID", "").strip()
SUGGEST_MOD_CHAT_ID: str | int = int(_RAW_SUGGEST_CHAT) if _RAW_SUGGEST_CHAT.lstrip("-+").isdigit() else _RAW_SUGGEST_CHAT
SUGGEST_USE_COPY: bool = os.getenv("SUGGEST_USE_COPY", "false").lower() in {"1", "true", "yes"}
SUGGEST_HELLO: str = (
    os.getenv(
        "SUGGEST_HELLO",
        (
            "üëã –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ü—Ä–∏—à–ª–∏—Ç–µ —Ç–µ–∫—Å—Ç, —Ñ–æ—Ç–æ/–≤–∏–¥–µ–æ, —Å—Å—ã–ª–∫—É –∏–ª–∏ –¥–æ–∫—É–º–µ–Ω—Ç. "
            "–î–æ–±–∞–≤—å—Ç–µ –æ–±—ä–µ–∫—Ç/–∞–¥—Ä–µ—Å –∏ –∫–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏–π ‚Äî –ø–æ –∂–µ–ª–∞–Ω–∏—é."
        ),
    )
    .strip()
)

# === HTTP-–∫–ª–∏–µ–Ω—Ç ===
HTTP_TIMEOUT_CONNECT: float = float(os.getenv("HTTP_TIMEOUT_CONNECT", "5"))
# –¢–ó: connect=5s, read=65s (long-poll up to 30s)
HTTP_TIMEOUT_READ: float = float(os.getenv("HTTP_TIMEOUT_READ", "65"))
HTTP_RETRY_TOTAL: int = int(os.getenv("HTTP_RETRY_TOTAL", "3"))
HTTP_BACKOFF: float = float(os.getenv("HTTP_BACKOFF", "0.5"))
SSL_NO_VERIFY_HOSTS: set[str] = {
    h.strip().lower()
    for h in os.getenv("SSL_NO_VERIFY_HOSTS", "").split(",")
    if h.strip()
}
TELEGRAM_LONG_POLL: int = int(os.getenv("TELEGRAM_LONG_POLL", "30"))

# === –§–ª–∞–≥–∏ –∏ —Ä–µ–∂–∏–º—ã ===
ENABLE_REWRITE: bool = os.getenv("ENABLE_REWRITE", "true").lower() in {"1", "true", "yes"}
STRICT_FILTER: bool = os.getenv("STRICT_FILTER", "false").lower() in {"1", "true", "yes"}
ENABLE_MODERATION: bool = os.getenv("ENABLE_MODERATION", str(DEFAULT_ENABLE_MODERATION)).lower() in {"1", "true", "yes"}
DRY_RUN: bool = os.getenv("DRY_RUN", "false").lower() in {"1", "true", "yes"}
ADMIN_CHAT_ID: str = os.getenv("ADMIN_CHAT_ID", "").strip()
REGION_HINT: str = os.getenv("REGION_HINT", "–ù–∏–∂–µ–≥–æ—Ä–æ–¥—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å")

LOG_LEVEL: str = os.getenv("LOG_LEVEL", "INFO").upper()
LOG_DIR_NAME: str = os.getenv("LOG_DIR_NAME", "logs").strip() or "logs"
LOG_ROTATE_BYTES: int = int(os.getenv("LOG_ROTATE_BYTES", str(10 * 1024 * 1024)))
LOG_BACKUP_COUNT: int = int(os.getenv("LOG_BACKUP_COUNT", "7"))
LOG_SQL_DEBUG: bool = os.getenv("LOG_SQL_DEBUG", "false").lower() in {"1", "true", "yes"}
LOG_TIME_ROTATE: bool = os.getenv("LOG_TIME_ROTATE", "false").lower() in {"1", "true", "yes"}
LOG_TIME_WHEN: str = os.getenv("LOG_TIME_WHEN", "midnight")
LOG_TIME_BACKUP_COUNT: int = int(os.getenv("LOG_TIME_BACKUP_COUNT", "7"))

# === –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –∏ –º–µ–¥–∏–∞ ===
# Allow new variable names defined in technical specification
REVIEW_CHAT_ID: str | int = (
    os.getenv("MOD_CHAT_ID")
    or os.getenv("REVIEW_CHAT_ID", DEFAULT_REVIEW_CHAT_ID)
).strip()
CHANNEL_CHAT_ID: str | int = (
    os.getenv("TARGET_CHAT_ID")
    or os.getenv("CHANNEL_CHAT_ID", CHANNEL_ID)
).strip()
MODERATOR_IDS: set[int] = {
    int(x)
    for x in (
        os.getenv("ALLOWED_MODERATORS")
        or os.getenv(
            "MODERATOR_IDS",
            ",".join(str(x) for x in DEFAULT_MODERATOR_IDS),
        )
    ).split(",")
    if x.strip()
}
ALLOWED_MODERATORS = MODERATOR_IDS
SNOOZE_MINUTES: int = int(os.getenv("SNOOZE_MINUTES", "0"))
REVIEW_TTL_HOURS: int = int(os.getenv("REVIEW_TTL_HOURS", "24"))
CAPTION_LIMIT: int = int(os.getenv("CAPTION_LIMIT", "1024"))
TELEGRAM_MESSAGE_LIMIT: int = int(os.getenv("TELEGRAM_MESSAGE_LIMIT", "4096"))
_RAW_PARSE_MODE = (
    os.getenv("TELEGRAM_PARSE_MODE")
    or os.getenv("PARSE_MODE")
    or "HTML"
)
if _RAW_PARSE_MODE.strip().lower() == "markdownv2":
    TELEGRAM_PARSE_MODE = PARSE_MODE = "MarkdownV2"
elif _RAW_PARSE_MODE.strip().lower() == "html":
    TELEGRAM_PARSE_MODE = PARSE_MODE = "HTML"
else:
    TELEGRAM_PARSE_MODE = PARSE_MODE = _RAW_PARSE_MODE.strip()
TELEGRAM_DISABLE_WEB_PAGE_PREVIEW: bool = (
    os.getenv(
        "DISABLE_WEB_PAGE_PREVIEW",
        os.getenv("TELEGRAM_DISABLE_WEB_PAGE_PREVIEW", "true"),
    )
    .lower()
    in {"1", "true", "yes"}
)

# === –†–µ–≥—É–ª–∏—Ä—É–µ–º—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–∏–ª—å—Ç—Ä–∞ ===
FILTER_HEAD_CHARS: int = int(os.getenv("FILTER_HEAD_CHARS", "400"))
WHITELIST_SOURCES = set(
    s.strip().lower()
    for s in os.getenv("WHITELIST_SOURCES", "").split(",")
    if s.strip()
)
WHITELIST_RELAX: bool = os.getenv("WHITELIST_RELAX", "true").lower() in {"1", "true", "yes"}
FETCH_LIMIT_PER_SOURCE: int = int(os.getenv("FETCH_LIMIT_PER_SOURCE", "30"))
LOOP_DELAY_SECS: int = int(os.getenv("LOOP_DELAY_SECS", "600"))

# —Ä–µ–∂–∏–º ¬´—Ç–æ–ª—å–∫–æ Telegram¬ª (ENV: ONLY_TELEGRAM=true/1/yes)
ONLY_TELEGRAM: bool = os.getenv("ONLY_TELEGRAM", "false").lower() in {"1", "true", "yes"}

# –ø—É—Ç—å –∫ —Å–ø–∏—Å–∫—É —Ç–µ–ª–µ–≥—Ä–∞–º-–∫–∞–Ω–∞–ª–æ–≤ (–ø–æ –æ–¥–Ω–æ–π —Å—Å—ã–ª–∫–µ –Ω–∞ —Å—Ç—Ä–æ–∫—É)
TELEGRAM_LINKS_FILE = os.getenv("TELEGRAM_LINKS_FILE", "telegram_links.txt").strip()

# --- Database ---
DB_PATH: str = os.getenv("DB_PATH", str(CONFIG_DIR / "newsbot.db")).strip()
ITEM_RETENTION_DAYS: int = int(os.getenv("ITEM_RETENTION_DAYS", "90"))
DEDUP_RETENTION_DAYS: int = int(os.getenv("DEDUP_RETENTION_DAYS", "45"))
DB_PRUNE_BATCH: int = int(os.getenv("DB_PRUNE_BATCH", "500"))

# --- –ò—Å—Ç–æ—á–Ω–∏–∫–∏/–º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ ---
HOST_FAIL_ALERT_THRESHOLD: int = int(os.getenv("HOST_FAIL_ALERT_THRESHOLD", "5"))
HOST_FAIL_ALERT_WINDOW_SEC: int = int(os.getenv("HOST_FAIL_ALERT_WINDOW_SEC", "1800"))
HOST_FAIL_ALERT_COOLDOWN_SEC: int = int(os.getenv("HOST_FAIL_ALERT_COOLDOWN_SEC", "900"))
SERVICE_CHAT_ID: str = os.getenv("SERVICE_CHAT_ID", os.getenv("ADMIN_CHAT_ID", "")).strip()
HOST_FAIL_AUTO_QUARANTINE_THRESHOLD: int = int(
    os.getenv("HOST_FAIL_AUTO_QUARANTINE_THRESHOLD", "3")
)
HOST_FAIL_AUTO_QUARANTINE_HOURS: float = float(
    os.getenv("HOST_FAIL_AUTO_QUARANTINE_HOURS", "4")
)


def validate_config() -> None:
    """Validate critical configuration values with clear errors."""

    missing: list[str] = []
    if not DRY_RUN and BOT_TOKEN in {"", "YOUR_TELEGRAM_BOT_TOKEN"}:
        missing.append("TELEGRAM_BOT_TOKEN")
    if not DRY_RUN and not str(CHANNEL_CHAT_ID) and not CHANNEL_ID:
        missing.append("CHANNEL_CHAT_ID or CHANNEL_ID")
    if ENABLE_MODERATION:
        if str(REVIEW_CHAT_ID) in {"", "@your_review_channel"}:
            missing.append("REVIEW_CHAT_ID")
        if not MODERATOR_IDS:
            missing.append("MODERATOR_IDS")
    if ONLY_TELEGRAM:
        if not os.getenv("TELETHON_API_ID"):
            missing.append("TELETHON_API_ID")
        if not os.getenv("TELETHON_API_HASH"):
            missing.append("TELETHON_API_HASH")
    if missing:
        raise ValueError("Missing config: " + ", ".join(missing))
    if not isinstance(MODERATOR_IDS, set) or not all(isinstance(x, int) for x in MODERATOR_IDS):
        raise ValueError("MODERATOR_IDS must be a set[int]")
    if TELEGRAM_PARSE_MODE not in {"HTML", "MarkdownV2"}:
        raise ValueError("PARSE_MODE must be HTML or MarkdownV2")

# === –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ ===
REGION_KEYWORDS = [
    # --- –û–±–ª–∞—Å—Ç—å: —Ñ–æ—Ä–º—ã –∏ —Å–∏–Ω–æ–Ω–∏–º—ã ---
    "–Ω–∏–∂–µ–≥–æ—Ä–æ–¥—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
    "–Ω–∏–∂–µ–≥–æ—Ä–æ–¥—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏",
    "–≤ –Ω–∏–∂–µ–≥–æ—Ä–æ–¥—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏",
    "–Ω–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ –Ω–∏–∂–µ–≥–æ—Ä–æ–¥—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏",
    "–ø–æ –Ω–∏–∂–µ–≥–æ—Ä–æ–¥—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏",
    "–Ω–∏–∂–µ–≥–æ—Ä–æ–¥—Å–∫–∞—è –æ–±–ª.",
    "–Ω–∏–∂–µ–≥–æ—Ä–æ–¥—Å–∫–æ–π –æ–±–ª.",
    "–≤ –Ω–∏–∂–µ–≥–æ—Ä–æ–¥—Å–∫–æ–π –æ–±–ª.",
    "–Ω–∏–∂–µ–≥–æ—Ä–æ–¥—å–µ",
    "–Ω–∏–∂–µ–≥–æ—Ä–æ–¥—Å–∫",  # —Å—Ç–µ–º –¥–ª—è ¬´–Ω–∏–∂–µ–≥–æ—Ä–æ–¥—Å–∫–∏–π/‚Äì–∞—è/‚Äì–æ–º¬ª (—Ä–∞–π–æ–Ω, –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è –∏ —Ç.–ø.)

    # --- –ù–∏–∂–Ω–∏–π –ù–æ–≤–≥–æ—Ä–æ–¥ (–≥–æ—Ä–æ–¥) ---
    "–Ω–∏–∂–Ω–∏–π –Ω–æ–≤–≥–æ—Ä–æ–¥",
    "–Ω–∏–∂–Ω–µ–≥–æ –Ω–æ–≤–≥–æ—Ä–æ–¥–∞",
    "–≤ –Ω–∏–∂–Ω–µ–º –Ω–æ–≤–≥–æ—Ä–æ–¥–µ",
    "–≥. –Ω–∏–∂–Ω–∏–π –Ω–æ–≤–≥–æ—Ä–æ–¥",
    "–≥–æ—Ä–æ–¥ –Ω–∏–∂–Ω–∏–π –Ω–æ–≤–≥–æ—Ä–æ–¥",
    "–Ω. –Ω–æ–≤–≥–æ—Ä–æ–¥",
    "–Ω.–Ω–æ–≤–≥–æ—Ä–æ–¥",
    "–Ω –Ω–æ–≤–≥–æ—Ä–æ–¥",
    "–Ω–Ω",  # —á–∞—Å—Ç–æ –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è –∫–∞–∫ —Å–æ–∫—Ä–∞—â–µ–Ω–∏–µ –≤ –ª–æ–∫-–°–ú–ò

    # --- –†–∞–π–æ–Ω—ã –≥–æ—Ä–æ–¥–∞ –ù–∏–∂–Ω–µ–≥–æ –ù–æ–≤–≥–æ—Ä–æ–¥–∞ ---
    "–∞–≤—Ç–æ–∑–∞–≤–æ–¥—Å–∫–∏–π —Ä–∞–π–æ–Ω", "–≤ –∞–≤—Ç–æ–∑–∞–≤–æ–¥—Å–∫–æ–º —Ä–∞–π–æ–Ω–µ",
    "—Å–æ—Ä–º–æ–≤—Å–∫–∏–π —Ä–∞–π–æ–Ω", "–≤ —Å–æ—Ä–º–æ–≤—Å–∫–æ–º —Ä–∞–π–æ–Ω–µ",
    "–∫–∞–Ω–∞–≤–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω", "–≤ –∫–∞–Ω–∞–≤–∏–Ω—Å–∫–æ–º —Ä–∞–π–æ–Ω–µ",
    "–Ω–∏–∂–µ–≥–æ—Ä–æ–¥—Å–∫–∏–π —Ä–∞–π–æ–Ω", "–≤ –Ω–∏–∂–µ–≥–æ—Ä–æ–¥—Å–∫–æ–º —Ä–∞–π–æ–Ω–µ",
    "–º–æ—Å–∫–æ–≤—Å–∫–∏–π —Ä–∞–π–æ–Ω", "–≤ –º–æ—Å–∫–æ–≤—Å–∫–æ–º —Ä–∞–π–æ–Ω–µ",
    "–ª–µ–Ω–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω", "–≤ –ª–µ–Ω–∏–Ω—Å–∫–æ–º —Ä–∞–π–æ–Ω–µ",
    "–ø—Ä–∏–æ–∫—Å–∫–∏–π —Ä–∞–π–æ–Ω", "–≤ –ø—Ä–∏–æ–∫—Å–∫–æ–º —Ä–∞–π–æ–Ω–µ",
    "—Å–æ–≤–µ—Ç—Å–∫–∏–π —Ä–∞–π–æ–Ω", "–≤ —Å–æ–≤–µ—Ç—Å–∫–æ–º —Ä–∞–π–æ–Ω–µ",

    # --- –ö—Ä—É–ø–Ω—ã–µ –≥–æ—Ä–æ–¥–∞/–æ–∫—Ä—É–≥–∞ –æ–±–ª–∞—Å—Ç–∏ (–±–µ–∑–æ–ø–∞—Å–Ω—ã–µ —Å—Ç–µ–º—ã/—Ñ–æ—Ä–º—ã) ---
    "–¥–∑–µ—Ä–∂–∏–Ω—Å–∫", "–≤ –¥–∑–µ—Ä–∂–∏–Ω—Å–∫–µ", "–¥–∑–µ—Ä–∂–∏–Ω—Å–∫–∞",
    "–∞—Ä–∑–∞–º–∞—Å", "–≤ –∞—Ä–∑–∞–º–∞—Å–µ", "–∞—Ä–∑–∞–º–∞—Å–∞",
    "—Å–∞—Ä–æ–≤", "–≤ —Å–∞—Ä–æ–≤–µ", "—Å–∞—Ä–æ–≤–∞",
    "–≤—ã–∫—Å–∞", "–≤ –≤—ã–∫—Å–µ", "–≤—ã–∫—Å–µ", "–≤—ã–∫—Å—É–Ω—Å–∫–∏–π",
    "–∫—Å—Ç–æ–≤–æ", "–≤ –∫—Å—Ç–æ–≤–µ", "–∫—Å—Ç–æ–≤—Å–∫–∏–π", "–∫—Å—Ç–æ–≤—Å–∫–æ–º",
    "–ø–∞–≤–ª–æ–≤–æ", "–≤ –ø–∞–≤–ª–æ–≤–µ", "–ø–∞–≤–ª–æ–≤—Å–∫–∏–π",
    "–ø–∞–≤–ª–æ–≤–æ-–Ω–∞-–æ–∫–µ", "–≤ –ø–∞–≤–ª–æ–≤–æ-–Ω–∞-–æ–∫–µ",
    "–±–∞–ª–∞—Ö–Ω–∞", "–≤ –±–∞–ª–∞—Ö–Ω–µ", "–±–∞–ª–∞—Ö–Ω–∏–Ω—Å–∫–∏–π", "–±–∞–ª–∞—Ö–Ω–∏–Ω—Å–∫–æ–º",
    "–±–æ–≥–æ—Ä–æ–¥—Å–∫", "–≤ –±–æ–≥–æ—Ä–æ–¥—Å–∫–µ", "–±–æ–≥–æ—Ä–æ–¥—Å–∫–∏–π",
    "–≥–æ—Ä–æ–¥–µ—Ü", "–≤ –≥–æ—Ä–æ–¥–µ—Ü–µ", "–≥–æ—Ä–æ–¥–µ—Ü–∫–∏–π",
    "–ª—ã—Å–∫–æ–≤–æ", "–≤ –ª—ã—Å–∫–æ–≤–µ", "–ª—ã—Å–∫–æ–≤—Å–∫–∏–π",
    "—Å–µ–º—ë–Ω–æ–≤", "—Å–µ–º–µ–Ω–æ–≤", "–≤ —Å–µ–º—ë–Ω–æ–≤–µ", "–≤ —Å–µ–º–µ–Ω–æ–≤–µ", "—Å–µ–º—ë–Ω–æ–≤—Å–∫–∏–π", "—Å–µ–º–µ–Ω–æ–≤—Å–∫–∏–π",
    "–∫–Ω—è–≥–∏–Ω–∏–Ω–æ", "–≤ –∫–Ω—è–≥–∏–Ω–∏–Ω–µ", "–∫–Ω—è–≥–∏–Ω–∏–Ω—Å–∫–∏–π",
    "–∫—É–ª–µ–±–∞–∫–∏", "–≤ –∫—É–ª–µ–±–∞–∫–∞—Ö", "–∫—É–ª–µ–±–∞–∫—Å–∫–∏–π",
    "–Ω–∞–≤–∞—à–∏–Ω–æ", "–≤ –Ω–∞–≤–∞—à–∏–Ω–æ", "–Ω–∞–≤–∞—à–∏–Ω—Å–∫–∏–π",
    "–ø–µ—Ä–µ–≤–æ–∑ (–≥–æ—Ä–æ–¥)", "–≥–æ—Ä–æ–¥ –ø–µ—Ä–µ–≤–æ–∑", "–≤ –≥–æ—Ä–æ–¥–µ –ø–µ—Ä–µ–≤–æ–∑",
    "–ø–µ—Ä–≤–æ–º–∞–π—Å–∫", "–≤ –ø–µ—Ä–≤–æ–º–∞–π—Å–∫–µ", "–ø–µ—Ä–≤–æ–º–∞–π—Å–∫–∏–π (–≥–æ—Ä–æ–¥)",
    "—Å–µ—Ä–≥–∞—á", "–≤ —Å–µ—Ä–≥–∞—á–µ", "—Å–µ—Ä–≥–∞—á—Å–∫–∏–π",
    "—É—Ä–µ–Ω—å", "–≤ —É—Ä–µ–Ω–µ", "—É—Ä–µ–Ω—Å–∫–∏–π",
    "—à–∞—Ö—É–Ω—å—è", "–≤ —à–∞—Ö—É–Ω—å–µ", "—à–∞—Ö—É–Ω—Å–∫–∏–π",
    "–≤–µ—Ç–ª—É–≥–∞", "–≤ –≤–µ—Ç–ª—É–≥–µ", "–≤–µ—Ç–ª—É–∂—Å–∫–∏–π",
    "–ª—É–∫–æ—è–Ω–æ–≤", "–≤ –ª—É–∫–æ—è–Ω–æ–≤–µ", "–ª—É–∫–æ—è–Ω–æ–≤—Å–∫–∏–π",
    "–≤–æ–ª–æ–¥–∞—Ä—Å–∫", "–≤ –≤–æ–ª–æ–¥–∞—Ä—Å–∫–µ", "–≤–æ–ª–æ–¥–∞—Ä—Å–∫–∏–π",
    "—á–∫–∞–ª–æ–≤—Å–∫", "–≤ —á–∫–∞–ª–æ–≤—Å–∫–µ", "—á–∫–∞–ª–æ–≤—Å–∫–∏–π",
    # ¬´–±–æ—Ä¬ª ‚Äî —Ç–æ–ª—å–∫–æ –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã (–≤–æ –∏–∑–±–µ–∂–∞–Ω–∏–µ –ª–æ–∂–Ω—ã—Ö ¬´–æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ/–≤—ã–±–æ—Ä—ã¬ª)
    "–≥. –±–æ—Ä", "–≥–æ—Ä–æ–¥ –±–æ—Ä", "–≤ –±–æ—Ä—É", "–Ω–∞ –±–æ—Ä—É", "–±–æ—Ä (–Ω–∏–∂–µ–≥–æ—Ä–æ–¥—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å)", "–±–æ—Ä –Ω–∏–∂–µ–≥–æ—Ä–æ–¥—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏",
    # ¬´–∑–∞–≤–æ–ª–∂—å–µ¬ª ‚Äî –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã (—Å–ª–æ–≤–æ —á–∞—Å—Ç–æ —É–ø–æ—Ç—Ä–µ–±–ª—è–µ—Ç—Å—è –∫–∞–∫ –≥–µ–æ—Ç–µ—Ä–º–∏–Ω)
    "–≥. –∑–∞–≤–æ–ª–∂—å–µ", "–≥–æ—Ä–æ–¥ –∑–∞–≤–æ–ª–∂—å–µ", "–∑–∞–≤–æ–ª–∂—å–µ (–≥–æ—Ä–æ–¥)", "–∑–∞–≤–æ–ª–∂—å–µ –Ω–∏–∂–µ–≥–æ—Ä–æ–¥—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏",

    # --- –ú—É–Ω–∏—Ü–∏–ø–∞–ª—å–Ω—ã–µ —Ä–∞–π–æ–Ω—ã/–æ–∫—Ä—É–≥–∞ –æ–±–ª–∞—Å—Ç–∏ (–Ω–∞–∑–≤–∞–Ω–∏—è + —Ñ–æ—Ä–º—ã ¬´—Ä–∞–π–æ–Ω/–≤ —Ä–∞–π–æ–Ω–µ¬ª) ---
    "–∞—Ä–¥–∞—Ç–æ–≤—Å–∫–∏–π —Ä–∞–π–æ–Ω", "–≤ –∞—Ä–¥–∞—Ç–æ–≤—Å–∫–æ–º —Ä–∞–π–æ–Ω–µ", "–∞—Ä–¥–∞—Ç–æ–≤–æ",
    "–±–æ–ª—å—à–µ–±–æ–ª–¥–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω", "–≤ –±–æ–ª—å—à–µ–±–æ–ª–¥–∏–Ω—Å–∫–æ–º —Ä–∞–π–æ–Ω–µ", "–±–æ–ª—å—à–æ–µ –±–æ–ª–¥–∏–Ω–æ",
    "–±–æ–ª—å—à–µ–º—É—Ä–∞—à–∫–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω", "–≤ –±–æ–ª—å—à–µ–º—É—Ä–∞—à–∫–∏–Ω—Å–∫–æ–º —Ä–∞–π–æ–Ω–µ", "–±–æ–ª—å—à–æ–µ –º—É—Ä–∞—à–∫–∏–Ω–æ",
    "–±—É—Ç—É—Ä–ª–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω", "–≤ –±—É—Ç—É—Ä–ª–∏–Ω—Å–∫–æ–º —Ä–∞–π–æ–Ω–µ", "–±—É—Ç—É—Ä–ª–∏–Ω–æ",
    "–≤–∞—á—Å–∫–∏–π —Ä–∞–π–æ–Ω", "–≤ –≤–∞—á—Å–∫–æ–º —Ä–∞–π–æ–Ω–µ", "–≤–∞—á–∞",
    "–≤–∞—Ä–Ω–∞–≤–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω", "–≤ –≤–∞—Ä–Ω–∞–≤–∏–Ω—Å–∫–æ–º —Ä–∞–π–æ–Ω–µ", "–≤–∞—Ä–Ω–∞–≤–∏–Ω–æ",
    "–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω", "–≤ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—Å–∫–æ–º —Ä–∞–π–æ–Ω–µ", "–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—Å–∫–æ–µ (–Ω–Ω)",
    "–≤–æ—Ä–æ—Ç—ã–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω", "–≤ –≤–æ—Ä–æ—Ç—ã–Ω—Å–∫–æ–º —Ä–∞–π–æ–Ω–µ", "–≤–æ—Ä–æ—Ç—ã–Ω–µ—Ü",
    "–≤—ã–∫—Å—É–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω", "–≤ –≤—ã–∫—Å—É–Ω—Å–∫–æ–º —Ä–∞–π–æ–Ω–µ",  # –¥–ª—è —Å—Ç–∞—Ä—ã—Ö —É–ø–æ–º–∏–Ω–∞–Ω–∏–π
    "–≥–∞–≥–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω", "–≤ –≥–∞–≥–∏–Ω—Å–∫–æ–º —Ä–∞–π–æ–Ω–µ", "–≥–∞–≥–∏–Ω–æ",
    "–≥–æ—Ä–æ–¥–µ—Ü–∫–∏–π —Ä–∞–π–æ–Ω", "–≤ –≥–æ—Ä–æ–¥–µ—Ü–∫–æ–º —Ä–∞–π–æ–Ω–µ",
    "–¥–∏–≤–µ–µ–≤—Å–∫–∏–π —Ä–∞–π–æ–Ω", "–≤ –¥–∏–≤–µ–µ–≤—Å–∫–æ–º —Ä–∞–π–æ–Ω–µ", "–¥–∏–≤–µ–µ–≤–æ",
    "–∫–Ω—è–≥–∏–Ω–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω", "–≤ –∫–Ω—è–≥–∏–Ω–∏–Ω—Å–∫–æ–º —Ä–∞–π–æ–Ω–µ",
    "–∫–æ–≤–µ—Ä–Ω–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω", "–≤ –∫–æ–≤–µ—Ä–Ω–∏–Ω—Å–∫–æ–º —Ä–∞–π–æ–Ω–µ", "–∫–æ–≤–µ—Ä–Ω–∏–Ω–æ",
    "–∫—Ä–∞—Å–Ω–æ–±–∞–∫–æ–≤—Å–∫–∏–π —Ä–∞–π–æ–Ω", "–≤ –∫—Ä–∞—Å–Ω–æ–±–∞–∫–æ–≤—Å–∫–æ–º —Ä–∞–π–æ–Ω–µ", "–∫—Ä–∞—Å–Ω—ã–µ –±–∞–∫–∏",
    "–∫—É–ª–µ–±–∞–∫—Å–∫–∏–π —Ä–∞–π–æ–Ω", "–≤ –∫—É–ª–µ–±–∞–∫—Å–∫–æ–º —Ä–∞–π–æ–Ω–µ",
    "–ª—É–∫–æ—è–Ω–æ–≤—Å–∫–∏–π —Ä–∞–π–æ–Ω", "–≤ –ª—É–∫–æ—è–Ω–æ–≤—Å–∫–æ–º —Ä–∞–π–æ–Ω–µ",
    "–ª—ã—Å–∫–æ–≤—Å–∫–∏–π —Ä–∞–π–æ–Ω", "–≤ –ª—ã—Å–∫–æ–≤—Å–∫–æ–º —Ä–∞–π–æ–Ω–µ",
    "–ø–∞–≤–ª–æ–≤—Å–∫–∏–π —Ä–∞–π–æ–Ω", "–≤ –ø–∞–≤–ª–æ–≤—Å–∫–æ–º —Ä–∞–π–æ–Ω–µ",
    "–ø–µ—Ä–µ–≤–æ–∑—Å–∫–∏–π —Ä–∞–π–æ–Ω", "–≤ –ø–µ—Ä–µ–≤–æ–∑—Å–∫–æ–º —Ä–∞–π–æ–Ω–µ",
    "–ø–µ—Ä–≤–æ–º–∞–π—Å–∫–∏–π —Ä–∞–π–æ–Ω", "–≤ –ø–µ—Ä–≤–æ–º–∞–π—Å–∫–æ–º —Ä–∞–π–æ–Ω–µ",
    "–ø–∏–ª—å–Ω–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω", "–≤ –ø–∏–ª—å–Ω–∏–Ω—Å–∫–æ–º —Ä–∞–π–æ–Ω–µ", "–ø–∏–ª—å–Ω–∞",
    "–ø–æ—á–∏–Ω–∫–æ–≤—Å–∫–∏–π —Ä–∞–π–æ–Ω", "–≤ –ø–æ—á–∏–Ω–∫–æ–≤—Å–∫–æ–º —Ä–∞–π–æ–Ω–µ", "–ø–æ—á–∏–Ω–∫–∏",
    "—Å–µ—á–µ–Ω–æ–≤—Å–∫–∏–π —Ä–∞–π–æ–Ω", "–≤ —Å–µ—á–µ–Ω–æ–≤—Å–∫–æ–º —Ä–∞–π–æ–Ω–µ", "—Å–µ—á–µ–Ω–æ–≤–æ",
    "—Å–µ—Ä–≥–∞—á—Å–∫–∏–π —Ä–∞–π–æ–Ω", "–≤ —Å–µ—Ä–≥–∞—á—Å–∫–æ–º —Ä–∞–π–æ–Ω–µ",
    "—Å–æ—Å–Ω–æ–≤—Å–∫–∏–π —Ä–∞–π–æ–Ω", "–≤ —Å–æ—Å–Ω–æ–≤—Å–∫–æ–º —Ä–∞–π–æ–Ω–µ", "—Å–æ—Å–Ω–æ–≤—Å–∫–æ–µ (–Ω–Ω)",
    "—Å–ø–∞—Å—Å–∫–∏–π —Ä–∞–π–æ–Ω", "–≤ —Å–ø–∞—Å—Å–∫–æ–º —Ä–∞–π–æ–Ω–µ", "—Å–ø–∞—Å—Å–∫–æ–µ (–Ω–Ω)",
    "—Ç–æ–Ω–∫–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω", "–≤ —Ç–æ–Ω–∫–∏–Ω—Å–∫–æ–º —Ä–∞–π–æ–Ω–µ", "—Ç–æ–Ω–∫–∏–Ω–æ",
    "—Ç–æ–Ω—à–∞–µ–≤—Å–∫–∏–π —Ä–∞–π–æ–Ω", "–≤ —Ç–æ–Ω—à–∞–µ–≤—Å–∫–æ–º —Ä–∞–π–æ–Ω–µ", "—Ç–æ–Ω—à–∞–µ–≤–æ",
    "—É—Ä–µ–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω", "–≤ —É—Ä–µ–Ω—Å–∫–æ–º —Ä–∞–π–æ–Ω–µ",
    "—à–∞—Ä–∞–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω", "–≤ —à–∞—Ä–∞–Ω—Å–∫–æ–º —Ä–∞–π–æ–Ω–µ", "—à–∞—Ä–∞–Ω–≥–∞",
    "—à–∞—Ç–∫–æ–≤—Å–∫–∏–π —Ä–∞–π–æ–Ω", "–≤ —à–∞—Ç–∫–æ–≤—Å–∫–æ–º —Ä–∞–π–æ–Ω–µ", "—à–∞—Ç–∫–∏",
    "–±–∞–ª–∞—Ö–Ω–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω", "–≤ –±–∞–ª–∞—Ö–Ω–∏–Ω—Å–∫–æ–º —Ä–∞–π–æ–Ω–µ",
    "–±–æ–≥–æ—Ä–æ–¥—Å–∫–∏–π —Ä–∞–π–æ–Ω", "–≤ –±–æ–≥–æ—Ä–æ–¥—Å–∫–æ–º —Ä–∞–π–æ–Ω–µ",
    "–∫—Å—Ç–æ–≤—Å–∫–∏–π —Ä–∞–π–æ–Ω", "–≤ –∫—Å—Ç–æ–≤—Å–∫–æ–º —Ä–∞–π–æ–Ω–µ",
    "–≤–æ–ª–æ–¥–∞—Ä—Å–∫–∏–π —Ä–∞–π–æ–Ω", "–≤ –≤–æ–ª–æ–¥–∞—Ä—Å–∫–æ–º —Ä–∞–π–æ–Ω–µ",
    "—á–∫–∞–ª–æ–≤—Å–∫–∏–π –æ–∫—Ä—É–≥", "–≤ —á–∫–∞–ª–æ–≤—Å–∫–æ–º –æ–∫—Ä—É–≥–µ",
    "—à–∞—Ö—É–Ω—Å–∫–∏–π –æ–∫—Ä—É–≥", "–≤ —à–∞—Ö—É–Ω—Å–∫–æ–º –æ–∫—Ä—É–≥–µ",
    "–Ω–∞–≤–∞—à–∏–Ω—Å–∫–∏–π –æ–∫—Ä—É–≥", "–≤ –Ω–∞–≤–∞—à–∏–Ω—Å–∫–æ–º –æ–∫—Ä—É–≥–µ",
]

CONSTRUCTION_KEYWORDS = [
    # --- –ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∏ –≥–æ—Ä–æ–¥—Å–∫–∞—è —Å—Ä–µ–¥–∞ ---
    "—Å—Ç—Ä–æ–∏—Ç–µ–ª", "–∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä", "–¥–æ—Ä–æ–≥", "—Ä–∞–∑–≤—è–∑–∫", "–º–æ—Å—Ç", "—Ç–æ–Ω–Ω–µ–ª",
    "—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç", "–º–µ—Ç—Ä–æ", "—Ç—Ä–∞–º–≤–∞–π", "–∂–∫—Ö", "–∫–æ–º–º—É–Ω–∞–ª", "–±–ª–∞–≥–æ—É—Å—Ç—Ä–æ–π",
    "–æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ", "–ø–∞—Ä–∫", "—Å–∫–≤–µ—Ä", "–Ω–∞–±–µ—Ä–µ–∂–Ω", "–ø–µ—à–µ—Ö–æ–¥–Ω",

    # --- –ñ–∏–ª—å—ë –∏ —Ä–∞–∑–≤–∏—Ç–∏–µ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–π (–Ω–µ —Ç–æ–ª—å–∫–æ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å) ---
    "–∫–∞–ø—Ä–µ–º–æ–Ω—Ç", "—Ä–µ–Ω–æ–≤–∞—Ü", "–∂–∏–ª–æ–π –∫–≤–∞—Ä—Ç–∞–ª", "–∂–∏–ª–æ–π –∫–æ–º–ø–ª–µ–∫—Å", "–º–Ω–æ–≥–æ—ç—Ç–∞–∂–Ω",
    "–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–≤–æ—Ä–æ–≤", "–∫–æ–º—Ñ–æ—Ä—Ç–Ω–∞—è —Å—Ä–µ–¥–∞", "–≥–æ—Ä–æ–¥—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞",

    # --- –≠–∫–æ–Ω–æ–º–∏–∫–∞ –∏ –±–∏–∑–Ω–µ—Å ---
    "—ç–∫–æ–Ω–æ–º–∏–∫", "–∏–Ω–≤–µ—Å—Ç–∏—Ü–∏", "–ø—Ä–æ–º—ã—à–ª–µ–Ω", "–ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏", "–∑–∞–≤–æ–¥", "–ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤",
    "–∫–ª–∞—Å—Ç–µ—Ä", "—Ç–µ—Ö–Ω–æ–ø–∞—Ä–∫", "–±–∏–∑–Ω–µ—Å", "–º–∞–ª—ã–π –±–∏–∑–Ω–µ—Å", "–ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª",

    # --- –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏ –Ω–∞—É–∫–∞ ---
    "—Ü–∏—Ñ—Ä–æ–≤", "—Ç–µ—Ö–Ω–æ–ª–æ–≥", "–∏–Ω–Ω–æ–≤–∞—Ü", "–Ω–∞—É—á–Ω", "–∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω", "–∏–Ω–∂–∏–Ω–∏—Ä–∏–Ω–≥",
    "it-–ø—Ä–æ–µ–∫—Ç", "—Å—Ç–∞—Ä—Ç–∞–ø", "—Ä–æ–±–æ—Ç", "–∫–≤–∞–Ω—Ç–æ–≤", "–∫–æ—Å–º–æ—Å",

    # --- –°–æ—Ü–∏–∞–ª—å–Ω–∞—è —Å—Ñ–µ—Ä–∞ ---
    "–æ–±—Ä–∞–∑–æ–≤–∞–Ω", "—à–∫–æ–ª", "–ª–∏—Ü–µ–π", "–≥–∏–º–Ω–∞–∑–∏", "–¥–µ—Ç—Å–∞–¥", "—É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç", "–∫–æ–ª–ª–µ–¥–∂",
    "–º–µ–¥–∏—Ü–∏–Ω", "–∑–¥—Ä–∞–≤–æ–æ—Ö—Ä–∞–Ω", "–±–æ–ª—å–Ω–∏—Ü", "–ø–æ–ª–∏–∫–ª–∏–Ω", "—Å–∫–æ—Ä–æ–π –ø–æ–º–æ—â–∏",
    "—Å–æ—Ü–∏–∞–ª—å–Ω", "–≤–æ–ª–æ–Ω—Ç–µ—Ä", "–ø–æ–¥–¥–µ—Ä–∂–∫", "—Å–µ–º—å", "–º–æ–ª–æ–¥–µ–∂",

    # --- –ö—É–ª—å—Ç—É—Ä–∞, —Ç—É—Ä–∏–∑–º, —Å–ø–æ—Ä—Ç ---
    "–∫—É–ª—å—Ç—É—Ä", "—Ç–µ–∞—Ç—Ä", "–º—É–∑–µ–π", "—Ñ–∏–ª–∞—Ä–º–æ–Ω–∏", "—Ñ–µ—Å—Ç–∏–≤–∞–ª—å", "–∫–æ–Ω—Ü–µ—Ä—Ç",
    "–∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫ –Ω–∞—Å–ª–µ–¥", "—Ç—É—Ä–∏–∑–º", "–º–∞—Ä—à—Ä—É—Ç", "–≥–æ—Å—Ç–∏–Ω–∏—Ü", "—Å–∞–Ω–∞—Ç–æ—Ä",
    "—Å–ø–æ—Ä—Ç", "—Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω", "–º–∞—Ç—á", "—Å—Ç–∞–¥–∏–æ–Ω", "—Ñ–æ–∫", "–¥–≤–æ—Ä–µ—Ü —Å–ø–æ—Ä—Ç–∞",

    # --- –≠–∫–æ–ª–æ–≥–∏—è –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å ---
    "—ç–∫–æ–ª–æ–≥", "–ø—Ä–∏—Ä–æ–¥", "–∫–ª–∏–º–∞—Ç", "–∑–µ–ª–µ–Ω–∞—è –∑–æ–Ω–∞", "–ª–µ—Å", "–≤–æ–¥–æ–µ–º", "–≤–æ–ª–≥–∞",
    "–±–µ–∑–æ–ø–∞—Å–Ω", "–º—á—Å", "–ø–æ–∂–∞—Ä–Ω", "–ø—Ä–∞–≤–æ–ø–æ—Ä—è–¥", "–¥–æ—Ä–æ–∂–Ω –±–µ–∑–æ–ø–∞—Å–Ω",

    # --- –¢—Ä—É–¥ –∏ –∑–∞–Ω—è—Ç–æ—Å—Ç—å ---
    "—Ç—Ä—É–¥–æ—É—Å—Ç—Ä–æ–π", "–∑–∞–Ω—è—Ç–æ—Å—Ç", "–∫–∞—Ä—å–µ—Ä", "—è—Ä–º–∞—Ä–∫–∞ –≤–∞–∫–∞–Ω—Å–∏–π", "—Ü–µ–Ω—Ç—Ä –∑–∞–Ω—è—Ç–æ—Å—Ç–∏",
]

GLOBAL_KEYWORDS = [
    "–≥–ª–æ–±–∞–ª—å–Ω", "–º–∏—Ä–æ–≤", "–º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω", "—Å–∞–º–º–∏—Ç", "—Ñ–æ—Ä—É–º", "–≥–µ–æ–ø–æ–ª–∏—Ç",
    "–æ–æ–Ω", "–≤—Å–µ–º–∏—Ä–Ω", "g20", "g7", "–±—Ä–∏–∫—Å", "–Ω–∞—Ç–æ",
    "—Ä–æ—Å—Å–∏—è", "–µ–≤—Ä–æ–ø–∞", "–µ–≤—Ä–æ—Å–æ—é–∑", "—Å—à–∞", "–∫–∏—Ç–∞–π", "–∏–Ω–¥–∏—è", "—è–ø–æ–Ω–∏—è",
    "–≥–µ—Ä–º–∞–Ω–∏", "—Ñ—Ä–∞–Ω—Ü", "–≤–µ–ª–∏–∫–æ–±—Ä–∏—Ç–∞–Ω–∏", "—É–∫—Ä–∞–∏–Ω", "–±–µ–ª–∞—Ä—É—Å",
    "–≤–∞—à–∏–Ω–≥—Ç–æ–Ω", "–Ω—å—é-–π–æ—Ä–∫", "–ª–æ–Ω–¥–æ–Ω", "–±–µ—Ä–ª–∏–Ω", "–ø–∞—Ä–∏–∂", "–ø–µ–∫–∏–Ω", "—à–∞–Ω—Ö–∞–π", "–¥—É–±–∞–π",
    "—Ñ–∏–Ω–∞–Ω—Å", "–º–∏—Ä–æ–≤–æ–π –±–∞–Ω–∫", "–º–≤—Ñ", "—ç–Ω–µ—Ä–≥–µ—Ç–∏–∫", "–Ω–µ—Ñ—Ç—å", "–≥–∞–∑", "—Ç–µ—Ö–Ω–æ–ª–æ–≥",
    "–∫–æ—Å–º–æ—Å", "—Å–ø—É—Ç–Ω–∏–∫", "nasa", "esa", "–∫–∏–±–µ—Ä–±–µ–∑–æ–ø–∞—Å–Ω",
]

# === –ò—Å—Ç–æ—á–Ω–∏–∫–∏ ===
# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ:
#  - type="rss" ‚Äî –æ–±—ã—á–Ω—ã–π RSS;
#  - type="html" ‚Äî –æ–¥–Ω–∞ —Å—Ç–∞—Ç—å—è –ø–æ URL;
#  - type="html_list" ‚Äî —Å—Ç—Ä–∞–Ω–∏—Ü–∞-–ª–µ–Ω—Ç–∞ —Å –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏; "selectors" –≤—Å–µ –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã.
SOURCES = [
    # === –û–§–ò–¶–ò–ê–õ–¨–ù–´–ï (RSS) ‚Äî –æ—Å—Ç–∞—é—Ç—Å—è –∫–∞–∫ –µ—Å—Ç—å ===
    {"name": "–ú–∏–Ω–≥—Ä–∞–¥ –ù–û ‚Äî –ø—Ä–µ—Å—Å-—Ü–µ–Ω—Ç—Ä",      "type": "rss", "url": "https://mingrad.nobl.ru/presscenter/news/rss/", "enabled": True},
    {"name": "–ì–æ—Å—Å—Ç—Ä–æ–π–Ω–∞–¥–∑–æ—Ä –ù–û ‚Äî –ø—Ä–µ—Å—Å-—Ü–µ–Ω—Ç—Ä","type": "rss", "url": "https://gsn.nobl.ru/presscenter/news/rss/", "enabled": True},
    {"name": "–ú–∏–Ω—Ç—Ä–∞–Ω—Å –ù–û ‚Äî –ø—Ä–µ—Å—Å-—Ü–µ–Ω—Ç—Ä",     "type": "rss", "url": "https://mintrans.nobl.ru/presscenter/news/rss/", "enabled": True},
    {"name": "–≥.–æ. –ë–æ—Ä ‚Äî –ø—Ä–µ—Å—Å-—Ü–µ–Ω—Ç—Ä",        "type": "rss", "url": "https://bor.nobl.ru/presscenter/news/rss/", "enabled": True},
    {"name": "–ê—Ä–∑–∞–º–∞—Å ‚Äî –ø—Ä–µ—Å—Å-—Ü–µ–Ω—Ç—Ä",         "type": "rss", "url": "https://arzamas.nobl.ru/presscenter/news/rss/", "enabled": True},
    {"name": "–ö—Å—Ç–æ–≤—Å–∫–∏–π –æ–∫—Ä—É–≥ ‚Äî –ø—Ä–µ—Å—Å-—Ü–µ–Ω—Ç—Ä", "type": "rss", "url": "https://kstovo.nobl.ru/presscenter/news/rss/", "enabled": True},
    {"name": "–ü–∞–≤–ª–æ–≤–æ ‚Äî –ø—Ä–µ—Å—Å-—Ü–µ–Ω—Ç—Ä",         "type": "rss", "url": "https://pavlovo.nobl.ru/presscenter/news/rss/", "enabled": True},
    {"name": "–ì–æ—Ä–¥—É–º–∞ –ù–∏–∂–Ω–µ–≥–æ –ù–æ–≤–≥–æ—Ä–æ–¥–∞",     "type": "rss", "url": "https://www.gordumannov.ru/rss", "enabled": True},
    {"name": "–ò–ê ¬´–í—Ä–µ–º—è –ù¬ª",                  "type": "rss", "url": "https://www.vremyan.ru/rss/news.rss", "enabled": True},

    # === HTML-–õ–ò–°–¢–ò–ù–ì–ò (–Ω–æ–≤—ã–µ) ===
    # –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è –ù–∏–∂–Ω–µ–≥–æ –ù–æ–≤–≥–æ—Ä–æ–¥–∞ ‚Äî —Ä–∞–∑–¥–µ–ª ¬´–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ¬ª
    {"name": "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è –ù–ù ‚Äî –°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ", "type": "html_list",
     "url": "https://admnnov.ru/?id=48",
     "enabled": False,
     "selectors": {
        "item": "article, .news-item, .entry, .post, li",
        "link": "a",
        "title": "h1 a, h2 a, h3 a, h2, h3, a",
        "date": "time, .date, .news-date, .posted-on",
        "date_attr": "datetime"
     }},

    # –ü—Ä–∞–≤–∏—Ç–µ–ª—å—Å—Ç–≤–æ –ù–û ‚Äî –ª–µ–Ω—Ç–∞ ¬´–í—Å–µ –Ω–æ–≤–æ—Å—Ç–∏¬ª
    {"name": "–ü—Ä–∞–≤–∏—Ç–µ–ª—å—Å—Ç–≤–æ –ù–û ‚Äî –ù–æ–≤–æ—Å—Ç–∏", "type": "html_list",
     "url": "https://nobl.ru/news/",
     "enabled": True,
     "selectors": {
        "item": "article, .news__item, .card, li",
        "link": "a",
        "title": "h2 a, h3 a, h2, h3, a",
        "date": "time, .date, .news-date",
        "date_attr": "datetime"
     }},

    # NewsNN ‚Äî —Ç–µ–≥ ¬´–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ¬ª
    {"name": "NewsNN ‚Äî –°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ", "type": "html_list",
     "url": "https://www.newsnn.ru/tags/stroitelstvo",
     "enabled": True,
     "selectors": {
        "item": "article, .card, .news-item, li",
        "link": "a",
        "title": "h2 a, h3 a, h2, h3, a",
        "date": "time, .date",
        "date_attr": "datetime"
     }},

    # Newsroom24 ‚Äî –æ—Å–Ω–æ–≤–Ω–∞—è –ª–µ–Ω—Ç–∞
    {"name": "Newsroom24 ‚Äî –ù–æ–≤–æ—Å—Ç–∏", "type": "html_list",
     "url": "https://newsroom24.ru/news/",
     "enabled": True,
     "selectors": {
        "item": "article, .news, .news-item, .card, li",
        "link": "a",
        "title": "h2 a, h3 a, h2, h3, a",
        "date": "time, .date",
        "date_attr": "datetime"
     }},

    # –ì–æ–≤–æ—Ä–∏—Ç –ù–∏–∂–Ω–∏–π ‚Äî –≥–ª–∞–≤–Ω–∞—è/–Ω–æ–≤–æ—Å—Ç–∏
    {"name": "–ì–æ–≤–æ—Ä–∏—Ç –ù–∏–∂–Ω–∏–π ‚Äî –ù–æ–≤–æ—Å—Ç–∏", "type": "html_list",
     "url": "https://govoritnn.ru/",
     "enabled": True,
     "selectors": {
        "item": "article, .post, .entry, .card, .news, li",
        "link": "a",
        "title": "h2 a, h3 a, h2, h3, a",
        "date": "time, .date, .posted-on",
        "date_attr": "datetime"
     }},

    # –ù–¢–ê-–ü—Ä–∏–≤–æ–ª–∂—å–µ ‚Äî –≥–ª–∞–≤–Ω–∞—è/–Ω–æ–≤–æ—Å—Ç–∏
    {"name": "–ù–¢–ê-–ü—Ä–∏–≤–æ–ª–∂—å–µ ‚Äî –ù–æ–≤–æ—Å—Ç–∏", "type": "html_list",
     "url": "https://www.nta-nn.ru/",
     "enabled": True,
     "selectors": {
        "item": "article, .news-item, .news, .card, li",
        "link": "a",
        "title": "h2 a, h3 a, h2, h3, a",
        "date": "time, .date, .news-date",
        "date_attr": "datetime"
     }},

    # GIPERNN ‚Äî –ñ—É—Ä–Ω–∞–ª/–ñ–∏–ª—å–µ/–ù–æ–≤–æ—Å—Ç–∏
    {"name": "GIPERNN ‚Äî –ñ–∏–ª—å–µ/–ù–æ–≤–æ—Å—Ç–∏", "type": "html_list",
     "url": "https://www.gipernn.ru/zhurnal/zhile/novosti",
     "enabled": False,
     "trust_level": 1,
     "min_text_length": 350,
     "rubrics_allowed": ["objects"],
     "selectors": {
        "item": "article, .article, .news-item, .card, li",
        "link": "a",
        "title": "h2 a, h3 a, h2, h3, a",
        "date": "time, .date",
        "date_attr": "datetime"
     }},

    # –°—Ç–æ–ª–∏—Ü–∞ –ù–∏–∂–Ω–∏–π ‚Äî –º–µ–¥–∏–∞-–ø–æ—Ä—Ç–∞–ª
    {"name": "–°—Ç–æ–ª–∏—Ü–∞ –ù–∏–∂–Ω–∏–π (STN Media)", "type": "html_list",
     "url": "https://stnmedia.ru/",
     "enabled": False,
     "timeout": (5, 30),
     "selectors": {
        "item": "article, .news-item, .card, li",
        "link": "a",
        "title": "h2 a, h3 a, h2, h3, a",
        "date": "time, .date",
        "date_attr": "datetime"
     }},

    # STN REALTY ‚Äî LIVE
    {"name": "STN REALTY ‚Äî LIVE", "type": "html_list",
     "url": "https://stn-realty.ru/live/",
     "enabled": False,
     "trust_level": 1,
     "min_text_length": 350,
     "rubrics_allowed": ["objects"],
     "selectors": {
        "item": "article, .news-item, .card, li",
        "link": "a",
        "title": "h2 a, h3 a, h2, h3, a",
        "date": "time, .date, .posted-on",
        "date_attr": "datetime"
     }},

    # –í –≥–æ—Ä–æ–¥–µ N ‚Äî –Ω–æ–≤–æ—Å—Ç–∏
    {"name": "–í –≥–æ—Ä–æ–¥–µ N ‚Äî –ù–æ–≤–æ—Å—Ç–∏", "type": "html_list",
     "url": "https://vgoroden.ru/news/",
     "enabled": False,
     "selectors": {
        "item": "article, .news-item, .news, .card, li",
        "link": "a",
        "title": "h2 a, h3 a, h2, h3, a",
        "date": "time, .date",
        "date_attr": "datetime"
     }},

    # NN.RU ‚Äî –ù–æ–≤–æ—Å—Ç–∏
    {"name": "NN.RU ‚Äî –ù–æ–≤–æ—Å—Ç–∏", "type": "html_list",
     "url": "https://www.nn.ru/news/",
     "enabled": True,
     "selectors": {
        "item": "article, .news, .card, li",
        "link": "a",
        "title": "h2 a, h3 a, h2, h3, a",
        "date": "time, .date, .news-date",
        "date_attr": "datetime"
     }},

    # NN.RU ‚Äî –ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å
    {"name": "NN.RU ‚Äî –ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å", "type": "html_list",
     "url": "https://www.nn.ru/realty/",
     "enabled": True,
     "selectors": {
        "item": "article, .news, .card, li",
        "link": "a",
        "title": "h2 a, h3 a, h2, h3, a",
        "date": "time, .date, .news-date",
        "date_attr": "datetime"
     }},

    # –î–æ–º–æ—Å—Ç—Ä–æ–π-–ù–ù ‚Äî –ù–æ–≤–æ—Å—Ç–∏
    {"name": "–î–æ–º–æ—Å—Ç—Ä–æ–π-–ù–ù ‚Äî –ù–æ–≤–æ—Å—Ç–∏", "type": "html_list",
     "url": "https://www.domostroynn.ru/novosti",
     "enabled": True,
     "selectors": {
        "item": "article, .news-item, .card, li",
        "link": "a",
        "title": "h2 a, h3 a, h2, h3, a",
        "date": "time, .date",
        "date_attr": "datetime"
     }},

    # --- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–µ–¥–∏–∞-–∏—Å—Ç–æ—á–Ω–∏–∫–∏ (RSS) ---
    {"name": "–ì–¢–†–ö –í–µ—Å—Ç–∏ –ù–ù", "type": "rss",
     "url": "https://vestinn.ru/rss/",
     "enabled": True},
    {"name": "–ê—Ä–≥—É–º–µ–Ω—Ç—ã –∏ —Ñ–∞–∫—Ç—ã ‚Äî –ù–ù", "type": "rss",
     "url": "https://aif-nn.ru/feed/",
     "enabled": True},
    {"name": "–ü—Ä–æ–ì–æ—Ä–æ–¥ –ù–∏–∂–Ω–∏–π –ù–æ–≤–≥–æ—Ä–æ–¥", "type": "rss",
     "url": "https://progorodnn.ru/rss.xml",
     "enabled": True},
]
# –ü–æ–ª–Ω–æ—Å—Ç—å—é –æ—Ç–∫–ª—é—á–∞–µ–º —Å–∞–π—Ç—ã –ø—Ä–∏ TELEGRAM-only
if ONLY_TELEGRAM:
    for s in SOURCES:
        try:
            s["enabled"] = False
        except Exception:
            pass

# –î–æ–ø–æ–ª–Ω—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–º–∏ –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º–∏ —Ä–µ–≥–∏–æ–Ω–∞
SOURCES.extend(SOURCES_NN)

if ONLY_TELEGRAM:
    # –ü–æ–≤—Ç–æ—Ä–Ω–æ –æ—Ç–∫–ª—é—á–∞–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –ø–æ—Å–ª–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è —Å–ø–∏—Å–∫–æ–º —Ä–µ–≥–∏–æ–Ω–∞
    for s in SOURCES:
        s["enabled"] = False

# –ë—ã—Å—Ç—Ä—ã–µ –∏–Ω–¥–µ–∫—Å—ã –ø–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º: –ø–æ –∏–º–µ–Ω–∏ –∏ –¥–æ–º–µ–Ω—É
SOURCES_BY_NAME: dict[str, dict] = {}
SOURCES_BY_DOMAIN_ALL: dict[str, list[dict]] = {}
for src in SOURCES:
    name = (src.get("name") or "").strip()
    if name:
        SOURCES_BY_NAME[name] = src
    domain = src.get("source_domain")
    if not domain:
        url = src.get("url", "")
        domain = (urlparse(url).hostname or "").lower()
        if domain.startswith("www."):
            domain = domain[4:]
    if domain:
        try:
            domain = domain.encode("idna").decode("ascii")
        except Exception:
            pass
        SOURCES_BY_DOMAIN_ALL.setdefault(domain, []).append(src)

# === –•—Ä–∞–Ω–∏–ª–∏—â–µ ===
# (DB_PATH –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –≤—ã—à–µ –∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç CONFIG_DIR –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)

# === Telegram ===
ON_SEND_ERROR: str = os.getenv("ON_SEND_ERROR", "retry").strip().lower()
PUBLISH_MAX_RETRIES: int = int(os.getenv("PUBLISH_MAX_RETRIES", "2"))
RETRY_BACKOFF_SECONDS: float = float(os.getenv("RETRY_BACKOFF_SECONDS", "2.5"))
PUBLISH_SLEEP_BETWEEN_SEC: float = float(os.getenv("PUBLISH_SLEEP_BETWEEN_SEC", "0"))

# === –†–µ—Ä–∞–π—Ç (–æ–ø—Ü.) ===
REWRITE_MAX_CHARS = int(os.getenv("REWRITE_MAX_CHARS", "600"))

# === –ö–ª–∞—Å—Ç–µ—Ä–∏–∑–∞—Ü–∏—è –ø–æ—Ö–æ–∂–∏—Ö –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ (–æ–ø—Ü.) ===
ENABLE_TITLE_CLUSTERING = os.getenv("ENABLE_TITLE_CLUSTERING", "false").lower() in {"1", "true", "yes"}
CLUSTER_SIM_THRESHOLD = float(os.getenv("CLUSTER_SIM_THRESHOLD", "0.85"))
CLUSTER_LOOKBACK_DAYS = int(os.getenv("CLUSTER_LOOKBACK_DAYS", "14"))
CLUSTER_MAX_CANDIDATES = int(os.getenv("CLUSTER_MAX_CANDIDATES", "200"))

# === –û–ø—Ä–æ—Å –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ ===
POLL_INTERVAL_SECONDS = int(os.getenv("POLL_INTERVAL_SECONDS", "600"))
FETCH_LIMIT_PER_SOURCE = int(os.getenv("FETCH_LIMIT_PER_SOURCE", "30"))
FETCH_DAYS_BACK = int(os.getenv("FETCH_DAYS_BACK", "7"))
BATCH_SIMILARITY_THRESHOLD = float(
    os.getenv("BATCH_SIMILARITY_THRESHOLD", str(CLUSTER_SIM_THRESHOLD))
)


def init_config_file(path: Path = ENV_PATH) -> None:
    """Interactive helper to create the persistent .env file."""
    if path.exists():
        print(f"Configuration already exists at {path}")
        return

    token = input("Enter BOT_TOKEN: ").strip()
    channel = input("Enter CHANNEL_ID: ").strip()
    admin = input("Enter ADMIN_CHAT_ID (optional): ").strip()

    with path.open("w", encoding="utf-8") as fh:
        fh.write(f"BOT_TOKEN={token}\n")
        fh.write(f"CHANNEL_ID={channel}\n")
        if admin:
            fh.write(f"ADMIN_CHAT_ID={admin}\n")

    print(f"Configuration written to {path}")


if __name__ == "__main__":
    import argparse

    parser = argparse.ArgumentParser(description="Manage NewsBot configuration")
    sub = parser.add_subparsers(dest="command")
    sub.add_parser("init", help="create persistent configuration")
    args = parser.parse_args()

    if args.command == "init":
        init_config_file()
    else:
        parser.print_help()
